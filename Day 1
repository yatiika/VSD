# Day 1 - Introduction to Verilog RTL Design and Synthesis
   # Day 1.1 - Introduction to open source simulator iverilog 
Simulator : Tool for checking design(RTL)
Iverilog tool we will use in this course
Design is actual Verilog code which has intended functionality to meet with required specifications
testbench : apply stimulus (testvector) to design to check functionality 
     # how does a simulator works:
It looks for changes in input signal upon change in input the output is evaluated if no change in input no change in output.
Note : It only looks for change in input
 # Day 1.2 - Labs using iverilog and gtkwave
Design and testbench file goes into iverilog and gives us vcd file (Value change dump format) which converts to gtkwave and gives us behavorial simulation.

 # Day 1.3 Introduction to Yosys and synthesis 
Synthesizer : Tool for converting RTL to netlist 
Yosys: synthesizer in this course
netlist is representation of design in form of cells present in the .lib file

Steps to verify the synthesis are that the output  of the synthesis should be same as RTL simulation. 
The set of primary input and output will remain same between RTL design and synthesised netlist so same test bench can be used 

RTL design : Behaviorial representation of required specification 
Synthesis :
RTL to gate level translation 
design is converted into gates and conection is between gates 
given out file is netlist 


.lib is collection of logical modules 
includes basic logic gates 
different flavours of same gates :
     2 input AND gate(Slow, Medium ,Fast)
     3 input AND gate(Slow, Medium ,Fast)
     4 input AND gate(Slow, Medium ,Fast)
Why we need different flavours of same gate :
Combinational delay in logic path determines the maximum speed of operation of digital logic circuit 
Tclk > Tcq_A + Tcombi + Tsetup_B
where Tcq_A:Proportional delay of Flip Flop A
Tclk :Proportional delay for 1 clock cycle 
Tsetup_B:Proportional delay for Setting up Flip Flop B
Tcombi :Proportional delay inbetween Flip flop A and B
So cells work fast to make Tcombi small
Fclk max = 1/ Tclk min

To ensure that we donot have hold issues at Flip flop B we need cells to work slow
hence we need cells that work fast to meet the required performance and cells that work slow to meet Hold.
This collection forms .lib.

Load on digital logic circuit is called capacitance.
Faster charging and discharging means lesser the cell delay. to cgarge and discharge we need transistors capable of sourcing more current 
so wide transistors means low delay means more area and power.
Norrow transistors means more delay means less area and power.

We need to guide synthesizer to select flavour of cells that is optimum for implementation of logic circuit.
More use of faster cells means bad circuit as less power and area.
use of slow cells gives a sluggish circuit that may not meet up with the required performance.
