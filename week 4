#Introduction
What is SPICE Simulation ?
SPICE simulation is a software tool used by engineers to model and analyze the behavior of electronic circuits before building them. It stands for Simulation Program with Integrated Circuit Emphasis and allows designers to test circuits virtually by providing information on voltage, current, and other parameters under different conditions.   

Why do we need SPICE? 
This helps predict how a circuit will perform in the real world, saving costs and reducing errors that would otherwise be found during physical prototyping.

MOSFET Behavior – Id vs Vds Characteristics
Purpose:
To study how the drain current (Id) varies with drain–source voltage (Vds) for different gate–source voltages (Vgs).
This helps identify and understand the linear (ohmic) and saturation regions of MOSFET operation, which are fundamental for designing and analyzing digital and analog circuits.
Threshold Voltage Extraction & Velocity Saturation
Purpose:
To extract the threshold voltage (Vt), which is the minimum Vgs required to form a conducting channel, and to observe velocity saturation in short-channel MOSFETs.
Accurate knowledge of Vt is essential for predicting device behavior, while understanding velocity saturation is critical in modern deep-submicron technologies where it impacts current drive and delay.
CMOS Inverter – Voltage Transfer Characteristic (VTC)
Purpose:
To analyze how a CMOS inverter transfers input voltage to output voltage, and to find its switching threshold (Vm).
The VTC provides insight into the logic threshold, gain, and robustness of the inverter — key parameters in digital logic design.
 Transient Behavior – Rise & Fall Delays
Purpose:
To measure the dynamic response of a CMOS inverter by applying a pulse and observing rise and fall propagation delays.
This reveals how fast the inverter can switch, which directly impacts circuit speed, timing, and STA analysis.
Noise Margin / Robustness Analysis
Purpose:
To determine the noise margins (NML and NMH) from the VTC.
Noise margins indicate the inverter’s tolerance to unwanted voltage variations or noise on input/output lines. High noise margins imply better noise immunity and reliable digital operation.
Power-Supply and Device Variation Studies
Purpose:
To examine how supply voltage (Vdd) changes and transistor sizing variations affect inverter behavior, including VTC shape, switching point, delays, and noise margins.
This helps understand PVT (Process–Voltage–Temperature) variations and design robustness in real-world scenarios.

Why Id vs Vds? (Transistor I–V Characteristics)
• This experiment shows how current (Id) flows through a MOSFET for different Vds and Vgs.
• By plotting Id vs Vds, we can identify linear and saturation regions, which tell us how the transistor behaves as a switch or amplifier.
• Understanding this behavior is essential because all digital gates are built using MOSFETs. Their speed, power, and switching depend on these characteristics.
 Why it matters: It helps you understand device behavior at the most basic level, which affects delay, power consumption, and reliability of circuits.
Why VTC? (Voltage Transfer Characteristic)
• The VTC of a CMOS inverter is a plot of output voltage vs input voltage.
• It shows how the inverter responds to different input levels and where the switching threshold (Vm) lies.
• From the shape of the VTC, you can judge how sharply the inverter switches and how robust it is to noise.
 Why it matters: VTC determines logic levels, gain, and noise margins, which directly affect circuit functionality and robustness.
  What is Threshold Voltage Extraction?
• Threshold voltage (Vt) is the minimum Vgs required to form a conducting channel between source and drain in a MOSFET.
• By sweeping Vgs and plotting Id, Vt is found using linear extrapolation of the Id–Vgs curve.
• Vt tells us when the transistor “turns on”.
Why it matters:
• Accurate Vt is crucial for predicting switching behavior, timing, and power.
• Small variations in Vt affect delay, leakage, and logic levels in circuits.
  What is Noise?
• Noise is any unwanted or unpredictable variation in voltage or current that can affect a signal.
• It may come from power supply fluctuations, electromagnetic interference, thermal noise, etc.
 What is Tolerance / Noise Margin?
• Tolerance refers to how much noise a circuit can handle without malfunctioning.
• Noise margin is the allowable range within which noise can be added to a signal without causing a wrong logic level.
• NML (Low noise margin) – for logic ‘0’
• NMH (High noise margin) – for logic ‘1’
Why it matters:
Good noise tolerance ensures that the circuit works reliably in real environments, where perfect voltage levels do not exist.


# SPICE Netlist /Code


Id vs Vds Characteristics (NMOS Device)
Purpose: Sweep Vds for multiple Vgs values to observe linear and saturation regions.
File: id_vds.spice

* NMOS Id–Vds characteristics
.include ./sky130_fd_pr__model__tt.spice      * Include Sky130 model file

.param W=1u L=0.15u

* NMOS transistor
M1 drain gate source bulk sky130_fd_pr__nfet_01v8 W={W} L={L}

Vds drain source 0
Vbs bulk source 0

* Sweep Vds 0 → 1.8V in 0.05V steps
.dc Vds 0 1.8 0.05 Vgs 0.4 1.8 0.4

* Gate voltage as parameter (stepped)
Vgs gate source 0

.control
run
set color0=white
set color1=black
plot i(Vds) vs v(drain)
.endc

.end


Threshold Voltage Extraction (Vgs Sweep)
Purpose: Sweep Vgs at fixed Vds to find Vt using linear extrapolation.
File: threshold_vt.spice
* Threshold voltage extraction for NMOS
.include ./sky130_fd_pr__model__tt.spice

.param W=1u L=0.15u

M1 drain gate source bulk sky130_fd_pr__nfet_01v8 W={W} L={L}

Vds drain source 1.8
Vbs bulk source 0

.dc Vgs 0 1.8 0.01
Vgs gate source 0

.control
run
plot i(Vds)**0.5 vs v(gate)     * Use square-root method
.endc

.end
Note: Vt can be extracted by fitting a line to √Id vs Vgs and finding x-intercept

CMOS Inverter – VTC Plot
Purpose: Plot Vout vs Vin to determine switching threshold (Vm).
File: inverter_vtc.spice

* CMOS inverter VTC
.include ./sky130_fd_pr__model__tt.spice

.param Wn=0.5u Ln=0.15u
.param Wp=1u  Lp=0.15u

* Supply
Vdd vdd 0 1.8

* Input source (DC sweep)
Vin in 0 0

* NMOS & PMOS
M1 out in 0 0 sky130_fd_pr__nfet_01v8 W={Wn} L={Ln}
M2 out in vdd vdd sky130_fd_pr__pfet_01v8 W={Wp} L={Lp}

.dc Vin 0 1.8 0.01

.control
run
plot v(out) vs v(in)
.endc

.end

Transient Analysis – Rise/Fall Delays
Purpose: Apply a pulse input and observe rise/fall times at Vout.
File: inverter_transient.spice
* CMOS inverter transient simulation
.include ./sky130_fd_pr__model__tt.spice

.param Wn=0.5u Ln=0.15u
.param Wp=1u  Lp=0.15u

Vdd vdd 0 1.8

* Pulse input: 0V → 1.8V, period 20ns
Vin in 0 PULSE(0 1.8 0ns 0.1ns 0.1ns 10ns 20ns)

M1 out in 0 0 sky130_fd_pr__nfet_01v8 W={Wn} L={Ln}
M2 out in vdd vdd sky130_fd_pr__pfet_01v8 W={Wp} L={Lp}

.tran 0.1ns 40ns

.control
run
plot v(in) v(out)
.measure tran trise  TRIG v(out) VAL=0.9 RISE=1 TARG v(out) VAL=1.62 RISE=1
.measure tran tfall  TRIG v(out) VAL=1.62 FALL=1 TARG v(out) VAL=0.9 FALL=1
.print trise tfall
.endc

.end
Variation Studies – Vdd and Transistor Sizing
Purpose: Observe effect of supply voltage and device sizing on VTC.
File: variation_vtc.spice
* Variation analysis - Vdd and sizing
.include ./sky130_fd_pr__model__tt.spice

.param Wn=0.5u Ln=0.15u
.param Wp=1u  Lp=0.15u

Vin in 0 0
.dc Vin 0 1.8 0.01

* Sweep Vdd values
Vdd vdd 0 1.8

M1 out in 0 0 sky130_fd_pr__nfet_01v8 W={Wn} L={Ln}
M2 out in vdd vdd sky130_fd_pr__pfet_01v8 W={Wp} L={Lp}

.control
* First nominal run
run
plot v(out) vs v(in)

* Sweep Vdd
reset
alter Vdd = 1.5
run
plot v(out) vs v(in) title 'VTC for Vdd=1.5V'

* Sizing variation
reset
alterparam Wp = 2u
alterparam Wn = 0.25u
alter Vdd = 1.8
run
plot v(out) vs v(in) title 'VTC with sizing variation'
.endc

.end

# Observation 

Id vs Vds Characteristics
What you see:
• For low Vds, Id increases linearly — this is the linear/ohmic region.
• At a certain Vds (≈ Vgs − Vt), the current stops increasing significantly — saturation onset.
• Higher Vgs values shift the curves upward (more current).
Why it happens (Device Physics):
• At low Vds, the MOSFET channel is uniformly inverted; the device behaves like a variable resistor.
• As Vds reaches (Vgs − Vt), the channel pinches off near the drain → carrier velocity limited → saturation.
• Increasing Vgs increases inversion charge → higher Id.
Relation to STA:
• Cell delay models in STA (e.g., NLDM, CCS) are derived from these I–V curves.
• The saturation current determines drive strength, which affects gate delay.
• Understanding this helps explain why delay changes with input slew and output load — both depend on transistor’s Id behavior.
Threshold Voltage Extraction
What you see:
• √Id vs Vgs plot shows a linear region. Extrapolating to zero gives Vt.
• Different sizing or short-channel devices may show slight shifts in Vt.
Why it happens (Device Physics):
• Vt depends on oxide thickness, doping, and channel length effects.
• In short-channel devices, DIBL (Drain-Induced Barrier Lowering) and other effects lower Vt compared to long-channel theory.
• Wider devices can slightly lower effective Vt due to reduced series resistance.
Relation to STA:
• Vt directly impacts gate delay: lower Vt → faster switching but more leakage.
• Corner models (TT, SS, FF) used in STA encode different Vt values to capture process variation.
• Shifts in Vt → shifts in cell delay and slack, so STA corners ensure timing is met across variation.
CMOS Inverter – VTC
What you see:
• The VTC has three regions: low, transition, and high.
• There is a sharp switching point (Vm) where Vin = Vout.
• Changing sizing or supply voltage shifts Vm and affects the slope of the transition.
Why it happens (Device Physics):
• Vm occurs where NMOS current ≈ PMOS current.
• Stronger PMOS → switching point shifts up; stronger NMOS → shifts down.
• Lower Vdd compresses the VTC vertically, reducing output swing and steepness.
Relation to STA:
• Noise margins and logic threshold affect how cleanly signals propagate between cells.
• The VTC shape defines input slew propagation, which influences STA’s slew-to-delay models.
• Shifts in Vm can lead to asymmetry in rise/fall delays, captured in timing libraries.
Transient – Rise/Fall Delays
What you see:
• Output transitions occur with finite delay after input transitions.
• Rise (t_pLH) and fall (t_pHL) delays are not identical due to sizing differences.
• Lower Vdd or weaker transistors → slower transitions.
Why it happens (Device Physics):
• Delays are governed by charging/discharging of load capacitance through PMOS/NMOS.
• PMOS typically weaker than NMOS → slower rising edges.
• Lower Vdd reduces current → increases both rise and fall times.
Relation to STA:
• These measured delays are exactly what STA uses in timing arcs.
• Rise/fall differences are modeled as separate delay tables.
• Input slew and output load affect delay because they influence how fast the internal nodes charge/discharge.
Noise Margin Analysis
What you see:
• NM_L and NM_H are positive, indicating valid noise immunity.
• Reducing Vdd or skewed sizing lowers noise margins, especially NM_H or NM_L depending on which device is weaker.
Why it happens (Device Physics):
• Noise margins are determined by the steepness and symmetry of the VTC.
• Lower Vdd reduces voltage swing → compresses margins.
• Unequal NMOS/PMOS strengths shift switching point, making one noise margin smaller.
Relation to STA:
• STA typically assumes nominal logic thresholds, but real circuits must tolerate input noise and variability.
• Good noise margins mean the circuit tolerates delay and coupling noise, ensuring stable logic ‘0’ and ‘1’.
• Low margins can cause STA pessimism or require noise-aware signoff.
  Variation Studies (Vdd & Sizing)
What you see:
• Lowering Vdd shifts Vm downward, increases delay, and reduces noise margins.
• Increasing PMOS size shifts Vm upward, improves rise time but can worsen fall time symmetry.
• Halving NMOS makes rising edges dominant, shifting Vm and degrading NML.
Why it happens (Device Physics):
• Lower Vdd → lower current drive, less overdrive → slower switching & compressed logic levels.
• Sizing changes alter current balance between pull-up and pull-down networks → shifts VTC and delays.
Relation to STA:
• These effects correspond to voltage variation and process variation corners in STA.
• STA uses different timing libraries for low-voltage, fast/slow corners to ensure timing remains valid under real conditions.
• Vm shifts and margin reductions explain why multi-corner STA is essential.

#Conclusion 

 Higher-Level Reflections
 How transistor-level behavior constrains timing in real circuits
Every digital circuit is ultimately made up of tiny transistors. The speed at which these transistors turn ON and OFF, and how strongly they can drive signals, decides how fast the whole circuit can run.
If a transistor is weak (e.g., small size or low current), it takes longer to charge or discharge the next stage → this slows down the signal. Similarly, if the supply voltage is lower or the threshold voltage is higher, the transistor switches more slowly.
In short, the physics of individual transistors set the limits for the timing of logic gates, and those limits ripple up to the entire chip. No matter how good your design is logically, if the transistors can’t switch fast enough, the circuit will miss its timing.
 How variation or supply changes can affect STA margins & critical paths
In real chips, not every transistor is exactly the same — tiny differences occur during manufacturing (called process variation). Also, the supply voltage can fluctuate during operation.
These changes cause transistor speed to shift up or down, which changes gate delays.
• If supply drops or a transistor is slower → delay increases → the critical path (the slowest signal path) might become even slower and fail timing.
• If supply rises or devices are faster → the circuit might work faster than expected, but can also create hold time issues.
STA (Static Timing Analysis) builds in margins to account for these effects. It checks timing across different “corners” (e.g., slow supply, fast supply, worst-case manufacturing). If variation or supply change is bigger than expected, these margins may not be enough, leading to timing violations on critical paths.
In essence:
• Transistor physics = the foundation of all timing.
• Variation and voltage shifts = real-world disturbances that STA must plan for.
• STA margins are like “safety buffers,” but if the transistor behavior drifts too much, even the best buffers can be overrun.
